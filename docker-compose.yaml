version: '3.8'

services:
  app:
    image: golang:1.24.1-alpine3.21
    container_name: goserver
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - /app/tmp
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - SERVER_HOST=${SERVER_HOST}
      - DB_PORT=${DB_PORT}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSLMODE=${DB_SSLMODE}
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:14.17-alpine3.21
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '5433:${DB_PORT}'
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER}']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
