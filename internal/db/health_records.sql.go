// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: health_records.sql

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/lib/pq"
)

const createHealthRecord = `-- name: CreateHealthRecord :one
INSERT INTO health_records (
    -- user_id,
    parent_record_id,
    description,
    progress,
    improvement,
    severity,
    treatments_tried
) VALUES ($1, $2, $3, $4, $5, $6)
RETURNING id, parent_record_id, description, progress, improvement, severity, treatments_tried, created_at, updated_at
`

type CreateHealthRecordParams struct {
	ParentRecordID  uuid.NullUUID   `json:"parentRecordId"`
	Description     string          `json:"description"`
	Progress        ProgressEnum    `json:"progress"`
	Improvement     ImprovementEnum `json:"improvement"`
	Severity        SeverityEnum    `json:"severity"`
	TreatmentsTried []string        `json:"treatmentsTried"`
}

func (q *Queries) CreateHealthRecord(ctx context.Context, arg CreateHealthRecordParams) (HealthRecord, error) {
	row := q.queryRow(ctx, q.createHealthRecordStmt, createHealthRecord,
		arg.ParentRecordID,
		arg.Description,
		arg.Progress,
		arg.Improvement,
		arg.Severity,
		pq.Array(arg.TreatmentsTried),
	)
	var i HealthRecord
	err := row.Scan(
		&i.ID,
		&i.ParentRecordID,
		&i.Description,
		&i.Progress,
		&i.Improvement,
		&i.Severity,
		pq.Array(&i.TreatmentsTried),
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getHealthRecord = `-- name: GetHealthRecord :one
SELECT id, parent_record_id, description, progress, improvement, severity, treatments_tried, created_at, updated_at FROM health_records
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetHealthRecord(ctx context.Context, id uuid.UUID) (HealthRecord, error) {
	row := q.queryRow(ctx, q.getHealthRecordStmt, getHealthRecord, id)
	var i HealthRecord
	err := row.Scan(
		&i.ID,
		&i.ParentRecordID,
		&i.Description,
		&i.Progress,
		&i.Improvement,
		&i.Severity,
		pq.Array(&i.TreatmentsTried),
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
